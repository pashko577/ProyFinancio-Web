aplication.properties 

# ===========================================
# ðŸ”¹ CONFIGURACIÃ“N GENERAL DE LA APLICACIÃ“N
# ===========================================
spring.application.name=Financio
server.port=8080

# ===========================================
# ðŸ”¹ CONEXIÃ“N A POSTGRESQL (Datos principales)
# ===========================================
spring.datasource.url=jdbc:postgresql://localhost:5432/financio
spring.datasource.username=postgres
spring.datasource.password=Castro
spring.datasource.driver-class-name=org.postgresql.Driver

# ===========================================
# ðŸ”¹ CONFIGURACIÃ“N DE JPA / HIBERNATE
# ===========================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.flyway.enabled=false

# ===========================================
# ðŸ”¹ CONEXIÃ“N A MONGODB (Para las metas)
# ===========================================
spring.data.mongodb.uri=mongodb://localhost:27017/financio_db
spring.data.mongodb.database=financio_db

# ===========================================
# ðŸ”¹ CORS (si usas frontend local como Angular o React)
# ===========================================
# Ejemplo: permitir llamadas desde http://localhost:4200
# Si usas otro puerto, cÃ¡mbialo
# (Opcional: puedes configurar globalmente o en los controladores)
# spring.web.cors.allowed-origins=http://localhost:4200
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS

# ===========================================
# ðŸ”¹ LOGGING (opcional para depuraciÃ³n)
# ===========================================
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE